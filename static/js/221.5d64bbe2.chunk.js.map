{"version":3,"file":"static/js/221.5d64bbe2.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.style.js","components/HndlInput.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.style.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.style.js","components/ContactList/ContactList.jsx","components/SearchFilter/SearchFilter.style.js","components/SearchFilter/SearchFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = (state) => state.contacts.items;\n\nexport const selectFilter = (state) => state.filter;\n\nexport const selectError = (state) => state.contacts.error;\n\nexport const selectIsLoading = (state) => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.form`\n  align-items: center;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  outline: none;\n  padding: 5px;\n  font-size: 18px;\n  border-radius: 5px;\n  text-align: center;\n  font-weight: 700;\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n`;\n\nexport const AddContact = styled.h2`\n  color: #fff;\n  margin: 0;\n  padding: 0;\n`;\n","export const handleNameInput = (evt, setName) => {\n  const newTextValue = evt.target.value.replace(/[^a-zA-Z\\s'-]/g, \"\");\n\n  setName(newTextValue);\n};\n\nexport const handleNumberInput = (e, setNumber) => {\n  const newNumberValue = e.target.value.replace(\n    /[^+\\d\\s().-]|^[\\s().-]+|(?<=\\d)[+]|\\b[+]\\b/g,\n    \"\"\n  );\n\n  setNumber(newNumberValue);\n};\n","import React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { selectContacts } from \"../../redux/selectors\";\nimport {\n  Container as FormContainer,\n  Label as FormLabel,\n  Input as FormInput,\n  AddContact,\n} from \"./ContactForm.style\";\nimport { handleNameInput, handleNumberInput } from \"../HndlInput\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddButtonClick = () => {\n    const nameExists = contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const numberExists = contacts.some((contact) => contact.number === number);\n\n    if (nameExists) {\n      alert(`${name} is already in contacts!`);\n    } else if (numberExists) {\n      alert(`${number} is already in contacts!`);\n    } else if (name.trim() !== \"\" && number.trim() !== \"\") {\n      dispatch(\n        addContact({\n          name: name,\n          number: number,\n        })\n      );\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleAddButtonClick();\n    }\n  };\n\n  return (\n    <FormContainer>\n      <AddContact>Add Contact</AddContact>\n      <FormLabel>\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={(evt) => handleNameInput(evt, setName)}\n          onKeyDown={handleKeyDown}\n        />\n      </FormLabel>\n\n      <FormLabel>\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={(e) => handleNumberInput(e, setNumber)}\n          onKeyDown={handleKeyDown}\n        />\n      </FormLabel>\n\n      <Button\n        style={{ backgrounColor: \"red\" }}\n        type=\"button\"\n        action={handleAddButtonClick}\n      >\n        Add contact\n      </Button>\n    </FormContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 5px 10px;\n  gap: 10px;\n`;\n\nexport const ContactName = styled.span`\n  color: black;\n  font-weight: bold;\n`;\n\nexport const ContactNumber = styled.a`\n  color: black;\n  font-weight: bold;\n  cursor: pointer;\n\n  &&:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const EditButton = styled.button`\n  background: linear-gradient(to right bottom, #f06, #f06, #fff);\n  border-radius: 4px;\n  border: none;\n  color: white;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 700;\n  outline: none;\n  padding: 8px 16px;\n  text-align: center;\n  &&:hover {\n    background: linear-gradient(to right bottom, #fff, #f06, #f06);\n  }\n  margin-right: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  @media only screen and (max-width: 600px) {\n    margin-right: 10px;\n  }\n  background: linear-gradient(to left top, #fff, #f06, #f06);\n  border-radius: 4px;\n  border: none;\n  color: white;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 700;\n  outline: none;\n  padding: 8px 16px;\n  text-align: center;\n  &&:hover {\n    background: linear-gradient(to right bottom, #fff, #f06, #f06);\n  }\n`;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  deleteContact,\n  editContact,\n} from \"../../redux/contacts/contacts-operations\";\nimport { Modal, Input, Button, message, Popconfirm } from \"antd\";\nimport {\n  ContactItems,\n  ContactName,\n  ContactNumber,\n  EditButton,\n  DeleteButton,\n} from \"./ContactItem.style\";\nimport { handleNameInput, handleNumberInput } from \"../HndlInput\";\n\nfunction ContactItem({ contact }) {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [newName, setNewName] = useState(contact.name);\n  const [newNumber, setNewNumber] = useState(contact.number);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const handleEdit = () => {\n    setShowModal(true);\n  };\n\n  const handleSave = () => {\n    setShowModal(false);\n    dispatch(editContact({ id: contact.id, name: newName, number: newNumber }));\n  };\n\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <ContactItems>\n      <ContactName>{contact.name}&#58; </ContactName>\n      <ContactNumber href={`tel:${contact.number}`}>\n        {contact.number}\n      </ContactNumber>\n      <div>\n        <EditButton onClick={handleEdit}>Edit</EditButton>\n        <Popconfirm\n          title=\"Delete the contact\"\n          description=\"Are you sure to delete this contact?\"\n          onConfirm={handleDelete}\n          onCancel={() => message.error(\"Click on No\")}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <DeleteButton>Delete</DeleteButton>\n        </Popconfirm>\n      </div>\n      <Modal\n        open={showModal}\n        onCancel={handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" onClick={handleSave}>\n            Save\n          </Button>,\n        ]}\n      >\n        <div className=\"modal-content\">\n          <label>Edit name:</label>\n          <Input\n            type=\"text\"\n            value={newName}\n            onChange={(evt) => handleNameInput(evt, setNewName)}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label>Edit phone number:</label>\n          <Input\n            type=\"text\"\n            value={newNumber}\n            onChange={(e) => handleNumberInput(e, setNewNumber)}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n      </Modal>\n    </ContactItems>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import styled from \"styled-components\";\n\nexport const ContactListContainer = styled.div`\n  color: black;\n  font-size: 16px;\n`;\n\nexport const Label = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.div`\n  padding: 10px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n`;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport {\n  deleteContact,\n  fetchContacts,\n} from \"../../redux/contacts/contacts-operations\";\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport {\n  ContactListContainer,\n  Label as ListLabel,\n  ListItem as ListItems,\n  ErrorMessage as ErrorMsg,\n} from \"./ContactList.style\";\nimport { Loader } from \"components/Loader\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleDeleteContact = (contactId) => {\n    dispatch(deleteContact(contactId));\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactListContainer>\n      {isLoading && <Loader />}{\" \"}\n      {!isLoading && !error && (\n        <ListLabel>\n          {contacts.map((contact) => (\n            <ListItems key={contact.id}>\n              <ContactItem\n                contact={contact}\n                onDeleteContact={handleDeleteContact}\n              />\n            </ListItems>\n          ))}\n        </ListLabel>\n      )}\n      {error && <ErrorMsg>An error occurred while fetching contacts.</ErrorMsg>}\n    </ContactListContainer>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  color: black;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const Input = styled.input`\n  border: none;\n  outline: none;\n  padding: 5px;\n  font-size: 18px;\n  border-radius: 5px;\n  text-align: center;\n  font-weight: 700;\n`;\n\nexport const SearchFilterContainer = styled.div``;\n\nexport const AddContact = styled.h2`\n  color: #fff;\n  margin: 15px 0px;\n  padding: 0;\n`;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/filter/filter-slice\";\nimport { selectFilter } from \"../../redux/selectors\";\nimport {\n  Form,\n  Label,\n  Input,\n  SearchFilterContainer,\n  AddContact,\n} from \"./SearchFilter.style\";\n\nconst SearchFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = (event) => {\n    dispatch(setFilter(event.target.value.trim()));\n  };\n\n  return (\n    <SearchFilterContainer>\n      <Form>\n        <AddContact>Find Contact</AddContact>\n\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleFilterChange}\n            placeholder=\"Search contact\"\n          />\n        </Label>\n      </Form>\n    </SearchFilterContainer>\n  );\n};\n\nexport default SearchFilter;\n","import { Helmet, HelmetProvider } from \"react-helmet-async\";\n\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport ContactList from \"../components/ContactList/ContactList\";\nimport Filter from \"../components/SearchFilter/SearchFilter\";\n\nfunction Contacts() {\n  return (\n    <>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </HelmetProvider>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","AddContact","_templateObject4","_templateObject5","handleNameInput","evt","setName","target","value","replace","handleNumberInput","e","setNumber","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","number","dispatch","useDispatch","useSelector","handleAddButtonClick","nameExists","some","numberExists","alert","concat","trim","addContact","handleKeyDown","key","_jsxs","FormContainer","children","_jsx","FormLabel","FormInput","type","placeholder","title","required","onChange","onKeyDown","Button","style","backgrounColor","action","ContactItems","ContactName","ContactNumber","EditButton","DeleteButton","_ref","showModal","setShowModal","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","handleCancel","href","onClick","Popconfirm","description","onConfirm","deleteContact","id","onCancel","message","okText","cancelText","Modal","open","footer","editContact","className","ContactListContainer","ListItem","ErrorMessage","handleDeleteContact","contactId","useEffect","fetchContacts","Loader","ListLabel","map","ListItems","ContactItem","onDeleteContact","ErrorMsg","Form","SearchFilterContainer","event","setFilter","_Fragment","HelmetProvider","Helmet","ContactForm","Filter","ContactList"],"sourceRoot":""}